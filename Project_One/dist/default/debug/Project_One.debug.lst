

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Oct 21 21:31:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 23/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00FB38                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   00FB38  80                 	db	128
    64   00FB39  0F                 	db	15
    65   00FB3A  81                 	db	129
    66   00FB3B  0F                 	db	15
    67   00FB3C  82                 	db	130
    68   00FB3D  0F                 	db	15
    69   00FB3E  83                 	db	131
    70   00FB3F  0F                 	db	15
    71   00FB40  84                 	db	132
    72   00FB41  0F                 	db	15
    73                           
    74                           ;initializer for _lat_registers
    75   00FB42  89                 	db	137
    76   00FB43  0F                 	db	15
    77   00FB44  8A                 	db	138
    78   00FB45  0F                 	db	15
    79   00FB46  8B                 	db	139
    80   00FB47  0F                 	db	15
    81   00FB48  8C                 	db	140
    82   00FB49  0F                 	db	15
    83   00FB4A  8D                 	db	141
    84   00FB4B  0F                 	db	15
    85                           
    86                           ;initializer for _tris_registers
    87   00FB4C  92                 	db	146
    88   00FB4D  0F                 	db	15
    89   00FB4E  93                 	db	147
    90   00FB4F  0F                 	db	15
    91   00FB50  94                 	db	148
    92   00FB51  0F                 	db	15
    93   00FB52  95                 	db	149
    94   00FB53  0F                 	db	15
    95   00FB54  96                 	db	150
    96   00FB55  0F                 	db	15
    97                           
    98                           ;initializer for _motor_2
    99   00FB56  12                 	db	18
   100   00FB57  1A                 	db	26
   101                           
   102                           ;initializer for _motor_1
   103   00FB58  02                 	db	2
   104   00FB59  0A                 	db	10
   105   000000                     _PORTE	set	3972
   106   000000                     _PORTD	set	3971
   107   000000                     _PORTC	set	3970
   108   000000                     _PORTB	set	3969
   109   000000                     _PORTA	set	3968
   110   000000                     _LATA	set	3977
   111   000000                     _TRISA	set	3986
   112   000000                     _TRISE	set	3990
   113   000000                     _TRISD	set	3989
   114   000000                     _TRISC	set	3988
   115   000000                     _TRISB	set	3987
   116   000000                     _LATE	set	3981
   117   000000                     _LATD	set	3980
   118   000000                     _LATC	set	3979
   119   000000                     _LATB	set	3978
   120                           
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124   00FB5A                     __pcinit:
   125                           	callstack 0
   126   00FB5A                     start_initialization:
   127                           	callstack 0
   128   00FB5A                     __initialization:
   129                           	callstack 0
   130                           
   131                           ; Initialize objects allocated to COMRAM (34 bytes)
   132                           ; load TBLPTR registers with __pidataCOMRAM
   133   00FB5A  0E38               	movlw	low __pidataCOMRAM
   134   00FB5C  6EF6               	movwf	tblptrl,c
   135   00FB5E  0EFB               	movlw	high __pidataCOMRAM
   136   00FB60  6EF7               	movwf	tblptrh,c
   137   00FB62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   138   00FB64  6EF8               	movwf	tblptru,c
   139   00FB66  EE00  F001         	lfsr	0,__pdataCOMRAM
   140   00FB6A  EE10 F022          	lfsr	1,34
   141   00FB6E                     copy_data0:
   142   00FB6E  0009               	tblrd		*+
   143   00FB70  CFF5 FFEE          	movff	tablat,postinc0
   144   00FB74  50E5               	movf	postdec1,w,c
   145   00FB76  50E1               	movf	fsr1l,w,c
   146   00FB78  E1FA               	bnz	copy_data0
   147                           
   148                           ; Clear objects allocated to COMRAM (7 bytes)
   149   00FB7A  EE00  F033         	lfsr	0,__pbssCOMRAM
   150   00FB7E  0E07               	movlw	7
   151   00FB80                     clear_0:
   152   00FB80  6AEE               	clrf	postinc0,c
   153   00FB82  06E8               	decf	wreg,f,c
   154   00FB84  E1FD               	bnz	clear_0
   155   00FB86                     end_of_initialization:
   156                           	callstack 0
   157   00FB86                     __end_of__initialization:
   158                           	callstack 0
   159   00FB86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160   00FB88  6EF8               	movwf	tblptru,c
   161   00FB8A  0100               	movlb	0
   162   00FB8C  EF81  F07E         	goto	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMRAM
   165   000033                     __pbssCOMRAM:
   166                           	callstack 0
   167   000033                     Relay_Turn_OFF@F2892:
   168                           	callstack 0
   169   000033                     	ds	1
   170   000034                     Relay_Turn_ON@F2887:
   171                           	callstack 0
   172   000034                     	ds	1
   173   000035                     Relay_Initialize@F2882:
   174                           	callstack 0
   175   000035                     	ds	1
   176   000036                     led_toggle@F2903:
   177                           	callstack 0
   178   000036                     	ds	1
   179   000037                     led_turn_off@F2898:
   180                           	callstack 0
   181   000037                     	ds	1
   182   000038                     led_turn_on@F2893:
   183                           	callstack 0
   184   000038                     	ds	1
   185   000039                     led_initialize@F2888:
   186                           	callstack 0
   187   000039                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000001                     __pdataCOMRAM:
   191                           	callstack 0
   192   000001                     _port_registers:
   193                           	callstack 0
   194   000001                     	ds	10
   195   00000B                     _lat_registers:
   196                           	callstack 0
   197   00000B                     	ds	10
   198   000015                     _tris_registers:
   199                           	callstack 0
   200   000015                     	ds	10
   201   00001F                     _motor_2:
   202                           	callstack 0
   203   00001F                     	ds	2
   204   000021                     _motor_1:
   205                           	callstack 0
   206   000021                     	ds	2
   207                           
   208                           	psect	cstackCOMRAM
   209   000023                     __pcstackCOMRAM:
   210                           	callstack 0
   211   000023                     gpio_pin_direction_intialize@pin_config:
   212                           	callstack 0
   213   000023                     gpio_pin_write_logic@pin_config:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x0
   217   000023                     	ds	2
   218   000025                     ??_gpio_pin_direction_intialize:
   219   000025                     gpio_pin_write_logic@logic:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x2
   223   000025                     	ds	1
   224   000026                     ??_gpio_pin_write_logic:
   225                           
   226                           ; 1 bytes @ 0x3
   227   000026                     	ds	5
   228   00002B                     gpio_pin_direction_intialize@ret:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x8
   232   00002B                     	ds	1
   233   00002C                     gpio_pin_intialize@pin_config:
   234                           	callstack 0
   235   00002C                     DC_Motor_Move_Right@dc_motor:
   236                           	callstack 0
   237   00002C                     DC_Motor_Move_Left@dc_motor:
   238                           	callstack 0
   239   00002C                     DC_Motor_Stop@dc_motor:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x9
   243   00002C                     	ds	2
   244   00002E                     ??_gpio_pin_intialize:
   245   00002E                     DC_Motor_Move_Right@ret:
   246                           	callstack 0
   247   00002E                     DC_Motor_Move_Left@ret:
   248                           	callstack 0
   249   00002E                     DC_Motor_Stop@ret:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0xB
   253   00002E                     	ds	1
   254   00002F                     DC_Motor_Intialize@dc_motor:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xC
   258   00002F                     	ds	2
   259   000031                     DC_Motor_Intialize@ret:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0xE
   263   000031                     	ds	1
   264   000032                     ??_main:
   265                           
   266                           ; 1 bytes @ 0xF
   267   000032                     	ds	1
   268                           
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 31 in file "application.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  ret             1    0        unsigned char 
   279 ;; Return value:  Size  Location     Type
   280 ;;                  2  216[None  ] int 
   281 ;; Registers used:
   282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;Total ram usage:        1 bytes
   293 ;; Hardware stack levels required when called: 4
   294 ;; This function calls:
   295 ;;		_DC_Motor_Move_Left
   296 ;;		_DC_Motor_Move_Right
   297 ;;		_DC_Motor_Stop
   298 ;;		_application_initialize
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305   00FD02                     __ptext0:
   306                           	callstack 0
   307   00FD02                     _main:
   308                           	callstack 27
   309   00FD02                     
   310                           ;application.c: 34: application_initialize();
   311   00FD02  EC8F  F07D         	call	_application_initialize	;wreg free
   312   00FD06                     l1509:
   313   00FD06  0E21               	movlw	low _motor_1
   314   00FD08  6E2C               	movwf	DC_Motor_Move_Right@dc_motor^0,c
   315   00FD0A  0E00               	movlw	high _motor_1
   316   00FD0C  6E2D               	movwf	(DC_Motor_Move_Right@dc_motor+1)^0,c
   317   00FD0E  EC0A  F07E         	call	_DC_Motor_Move_Right	;wreg free
   318   00FD12  0E1F               	movlw	low _motor_2
   319   00FD14  6E2C               	movwf	DC_Motor_Move_Left@dc_motor^0,c
   320   00FD16  0E00               	movlw	high _motor_2
   321   00FD18  6E2D               	movwf	(DC_Motor_Move_Left@dc_motor+1)^0,c
   322   00FD1A  ECE7  F07D         	call	_DC_Motor_Move_Left	;wreg free
   323   00FD1E                     
   324                           ;application.c: 39:     _delay(3000);
   325   00FD1E  0E04               	movlw	4
   326   00FD20  6E32               	movwf	??_main^0,c
   327   00FD22  0EE4               	movlw	228
   328   00FD24                     u887:
   329   00FD24  2EE8               	decfsz	wreg,f,c
   330   00FD26  D7FE               	bra	u887
   331   00FD28  2E32               	decfsz	??_main^0,f,c
   332   00FD2A  D7FC               	bra	u887
   333   00FD2C  D000               	nop2	
   334   00FD2E  0E21               	movlw	low _motor_1
   335   00FD30  6E2C               	movwf	DC_Motor_Move_Left@dc_motor^0,c
   336   00FD32  0E00               	movlw	high _motor_1
   337   00FD34  6E2D               	movwf	(DC_Motor_Move_Left@dc_motor+1)^0,c
   338   00FD36  ECE7  F07D         	call	_DC_Motor_Move_Left	;wreg free
   339   00FD3A  0E1F               	movlw	low _motor_2
   340   00FD3C  6E2C               	movwf	DC_Motor_Move_Right@dc_motor^0,c
   341   00FD3E  0E00               	movlw	high _motor_2
   342   00FD40  6E2D               	movwf	(DC_Motor_Move_Right@dc_motor+1)^0,c
   343   00FD42  EC0A  F07E         	call	_DC_Motor_Move_Right	;wreg free
   344   00FD46                     
   345                           ;application.c: 43:     _delay(3000);
   346   00FD46  0E04               	movlw	4
   347   00FD48  6E32               	movwf	??_main^0,c
   348   00FD4A  0EE4               	movlw	228
   349   00FD4C                     u897:
   350   00FD4C  2EE8               	decfsz	wreg,f,c
   351   00FD4E  D7FE               	bra	u897
   352   00FD50  2E32               	decfsz	??_main^0,f,c
   353   00FD52  D7FC               	bra	u897
   354   00FD54  D000               	nop2	
   355   00FD56  0E21               	movlw	low _motor_1
   356   00FD58  6E2C               	movwf	DC_Motor_Stop@dc_motor^0,c
   357   00FD5A  0E00               	movlw	high _motor_1
   358   00FD5C  6E2D               	movwf	(DC_Motor_Stop@dc_motor+1)^0,c
   359   00FD5E  EC2D  F07E         	call	_DC_Motor_Stop	;wreg free
   360   00FD62  0E1F               	movlw	low _motor_2
   361   00FD64  6E2C               	movwf	DC_Motor_Stop@dc_motor^0,c
   362   00FD66  0E00               	movlw	high _motor_2
   363   00FD68  6E2D               	movwf	(DC_Motor_Stop@dc_motor+1)^0,c
   364   00FD6A  EC2D  F07E         	call	_DC_Motor_Stop	;wreg free
   365   00FD6E                     
   366                           ;application.c: 47:     _delay(3000);
   367   00FD6E  0E04               	movlw	4
   368   00FD70  6E32               	movwf	??_main^0,c
   369   00FD72  0EE4               	movlw	228
   370   00FD74                     u907:
   371   00FD74  2EE8               	decfsz	wreg,f,c
   372   00FD76  D7FE               	bra	u907
   373   00FD78  2E32               	decfsz	??_main^0,f,c
   374   00FD7A  D7FC               	bra	u907
   375   00FD7C  D000               	nop2	
   376   00FD7E  EF83  F07E         	goto	l1509
   377   00FD82  EF00  F000         	goto	start
   378   00FD86                     __end_of_main:
   379                           	callstack 0
   380                           
   381 ;; *************** function _application_initialize *****************
   382 ;; Defined at:
   383 ;;		line 56 in file "application.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  ret             1    0        unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 3
   404 ;; This function calls:
   405 ;;		_DC_Motor_Intialize
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text1
   412   00FB1E                     __ptext1:
   413                           	callstack 0
   414   00FB1E                     _application_initialize:
   415                           	callstack 27
   416   00FB1E  0E21               	movlw	low _motor_1
   417   00FB20  6E2F               	movwf	DC_Motor_Intialize@dc_motor^0,c
   418   00FB22  0E00               	movlw	high _motor_1
   419   00FB24  6E30               	movwf	(DC_Motor_Intialize@dc_motor+1)^0,c
   420   00FB26  ECC8  F07D         	call	_DC_Motor_Intialize	;wreg free
   421   00FB2A  0E1F               	movlw	low _motor_2
   422   00FB2C  6E2F               	movwf	DC_Motor_Intialize@dc_motor^0,c
   423   00FB2E  0E00               	movlw	high _motor_2
   424   00FB30  6E30               	movwf	(DC_Motor_Intialize@dc_motor+1)^0,c
   425   00FB32  ECC8  F07D         	call	_DC_Motor_Intialize	;wreg free
   426   00FB36  0012               	return		;funcret
   427   00FB38                     __end_of_application_initialize:
   428                           	callstack 0
   429                           
   430 ;; *************** function _DC_Motor_Intialize *****************
   431 ;; Defined at:
   432 ;;		line 10 in file "ECU_Layer/Motor/ecu_dc_motor.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  dc_motor        2   12[COMRAM] PTR const struct .
   435 ;;		 -> motor_2(2), motor_1(2), 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  ret             1   14[COMRAM] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      unsigned char 
   440 ;; Registers used:
   441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:        3 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 2
   454 ;; This function calls:
   455 ;;		_gpio_pin_intialize
   456 ;; This function is called by:
   457 ;;		_application_initialize
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text2
   462   00FB90                     __ptext2:
   463                           	callstack 0
   464   00FB90                     _DC_Motor_Intialize:
   465                           	callstack 27
   466   00FB90                     
   467                           ;ECU_Layer/Motor/ecu_dc_motor.c: 11: Std_ReturnType ret = (Std_ReturnType)0x01;
   468   00FB90  0E01               	movlw	1
   469   00FB92  6E31               	movwf	DC_Motor_Intialize@ret^0,c
   470   00FB94                     
   471                           ;ECU_Layer/Motor/ecu_dc_motor.c: 12: if(dc_motor == ((void*)0)){
   472   00FB94  502F               	movf	DC_Motor_Intialize@dc_motor^0,w,c
   473   00FB96  1030               	iorwf	(DC_Motor_Intialize@dc_motor+1)^0,w,c
   474   00FB98  A4D8               	btfss	status,2,c
   475   00FB9A  EFD1  F07D         	goto	u711
   476   00FB9E  EFD3  F07D         	goto	u710
   477   00FBA2                     u711:
   478   00FBA2  EFD7  F07D         	goto	l1357
   479   00FBA6                     u710:
   480   00FBA6                     
   481                           ;ECU_Layer/Motor/ecu_dc_motor.c: 13:     ret = (Std_ReturnType)0x00;
   482   00FBA6  0E00               	movlw	0
   483   00FBA8  6E31               	movwf	DC_Motor_Intialize@ret^0,c
   484                           
   485                           ;ECU_Layer/Motor/ecu_dc_motor.c: 15: }
   486   00FBAA  EFE5  F07D         	goto	l1359
   487   00FBAE                     l1357:
   488                           
   489                           ;ECU_Layer/Motor/ecu_dc_motor.c: 19:     gpio_pin_intialize(&(dc_motor->dc_motors[0x00U]
      +                          ));
   490   00FBAE  C02F  F02C         	movff	DC_Motor_Intialize@dc_motor,gpio_pin_intialize@pin_config
   491   00FBB2  C030  F02D         	movff	DC_Motor_Intialize@dc_motor+1,gpio_pin_intialize@pin_config+1
   492   00FBB6  EC50  F07E         	call	_gpio_pin_intialize	;wreg free
   493                           
   494                           ;ECU_Layer/Motor/ecu_dc_motor.c: 20:      gpio_pin_intialize(&(dc_motor->dc_motors[0x01U
      +                          ]));
   495   00FBBA  0E01               	movlw	1
   496   00FBBC  242F               	addwf	DC_Motor_Intialize@dc_motor^0,w,c
   497   00FBBE  6E2C               	movwf	gpio_pin_intialize@pin_config^0,c
   498   00FBC0  0E00               	movlw	0
   499   00FBC2  2030               	addwfc	(DC_Motor_Intialize@dc_motor+1)^0,w,c
   500   00FBC4  6E2D               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
   501   00FBC6  EC50  F07E         	call	_gpio_pin_intialize	;wreg free
   502   00FBCA                     l1359:
   503                           
   504                           ;ECU_Layer/Motor/ecu_dc_motor.c: 22: return ret;
   505   00FBCA  5031               	movf	DC_Motor_Intialize@ret^0,w,c
   506   00FBCC  0012               	return		;funcret
   507   00FBCE                     __end_of_DC_Motor_Intialize:
   508                           	callstack 0
   509                           
   510 ;; *************** function _gpio_pin_intialize *****************
   511 ;; Defined at:
   512 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  pin_config      2    9[COMRAM] PTR const struct .
   515 ;;		 -> motor_2.dc_motors(2), motor_2(2), motor_1.dc_motors(2), motor_1(2), 
   516 ;;		 -> Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  ret             1    0        unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      unsigned char 
   521 ;; Registers used:
   522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        3 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 1
   535 ;; This function calls:
   536 ;;		_gpio_pin_direction_intialize
   537 ;;		_gpio_pin_write_logic
   538 ;; This function is called by:
   539 ;;		_DC_Motor_Intialize
   540 ;;		_led_initialize
   541 ;;		_Relay_Initialize
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text3
   546   00FCA0                     __ptext3:
   547                           	callstack 0
   548   00FCA0                     _gpio_pin_intialize:
   549                           	callstack 27
   550   00FCA0                     
   551                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1)
      +                          {
   552   00FCA0  502C               	movf	gpio_pin_intialize@pin_config^0,w,c
   553   00FCA2  102D               	iorwf	(gpio_pin_intialize@pin_config+1)^0,w,c
   554   00FCA4  B4D8               	btfsc	status,2,c
   555   00FCA6  EF57  F07E         	goto	u691
   556   00FCAA  EF59  F07E         	goto	u690
   557   00FCAE                     u691:
   558   00FCAE  EF6A  F07E         	goto	l1345
   559   00FCB2                     u690:
   560   00FCB2  C02C  FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
   561   00FCB6  C02D  FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
   562   00FCBA  30DF               	rrcf	223,w,c
   563   00FCBC  32E8               	rrcf	wreg,f,c
   564   00FCBE  32E8               	rrcf	wreg,f,c
   565   00FCC0  0B07               	andlw	7
   566   00FCC2  6E2E               	movwf	??_gpio_pin_intialize^0,c
   567   00FCC4  0E07               	movlw	7
   568   00FCC6  642E               	cpfsgt	??_gpio_pin_intialize^0,c
   569   00FCC8  EF68  F07E         	goto	u701
   570   00FCCC  EF6A  F07E         	goto	u700
   571   00FCD0                     u701:
   572   00FCD0  EF6C  F07E         	goto	l1347
   573   00FCD4                     u700:
   574   00FCD4                     l1345:
   575                           
   576                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:  }
   577   00FCD4  EF80  F07E         	goto	l157
   578   00FCD8                     l1347:
   579                           
   580                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:      gpio_pin_direction_intialize(pin_config);
   581   00FCD8  C02C  F023         	movff	gpio_pin_intialize@pin_config,gpio_pin_direction_intialize@pin_config
   582   00FCDC  C02D  F024         	movff	gpio_pin_intialize@pin_config+1,gpio_pin_direction_intialize@pin_config+1
   583   00FCE0  EC5C  F07F         	call	_gpio_pin_direction_intialize	;wreg free
   584                           
   585                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:      gpio_pin_write_logic(pin_config, pin_config->logic
      +                          );
   586   00FCE4  C02C  F023         	movff	gpio_pin_intialize@pin_config,gpio_pin_write_logic@pin_config
   587   00FCE8  C02D  F024         	movff	gpio_pin_intialize@pin_config+1,gpio_pin_write_logic@pin_config+1
   588   00FCEC  C02C  FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
   589   00FCF0  C02D  FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
   590   00FCF4  0E00               	movlw	0
   591   00FCF6  BEDF               	btfsc	indf2,7,c
   592   00FCF8  0E01               	movlw	1
   593   00FCFA  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   594   00FCFC  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
   595   00FD00                     l157:
   596   00FD00  0012               	return		;funcret
   597   00FD02                     __end_of_gpio_pin_intialize:
   598                           	callstack 0
   599                           
   600 ;; *************** function _gpio_pin_direction_intialize *****************
   601 ;; Defined at:
   602 ;;		line 14 in file "MCAL_Layer/GPIO/hal_gpio.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  pin_config      2    0[COMRAM] PTR const struct .
   605 ;;		 -> motor_2.dc_motors(2), motor_2(2), motor_1.dc_motors(2), motor_1(2), 
   606 ;;		 -> Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  ret             1    8[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      unsigned char 
   611 ;; Registers used:
   612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        9 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_gpio_pin_intialize
   628 ;;		_Button_Initialize
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text4
   633   00FEB8                     __ptext4:
   634                           	callstack 0
   635   00FEB8                     _gpio_pin_direction_intialize:
   636                           	callstack 27
   637   00FEB8                     
   638                           ;MCAL_Layer/GPIO/hal_gpio.c: 15:  Std_ReturnType ret = (Std_ReturnType)0x01;
   639   00FEB8  0E01               	movlw	1
   640   00FEBA  6E2B               	movwf	gpio_pin_direction_intialize@ret^0,c
   641   00FEBC                     
   642                           ;MCAL_Layer/GPIO/hal_gpio.c: 16:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1)
      +                          {
   643   00FEBC  5023               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   644   00FEBE  1024               	iorwf	(gpio_pin_direction_intialize@pin_config+1)^0,w,c
   645   00FEC0  B4D8               	btfsc	status,2,c
   646   00FEC2  EF65  F07F         	goto	u581
   647   00FEC6  EF67  F07F         	goto	u580
   648   00FECA                     u581:
   649   00FECA  EF78  F07F         	goto	l1299
   650   00FECE                     u580:
   651   00FECE  C023  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
   652   00FED2  C024  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
   653   00FED6  30DF               	rrcf	223,w,c
   654   00FED8  32E8               	rrcf	wreg,f,c
   655   00FEDA  32E8               	rrcf	wreg,f,c
   656   00FEDC  0B07               	andlw	7
   657   00FEDE  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
   658   00FEE0  0E07               	movlw	7
   659   00FEE2  6425               	cpfsgt	??_gpio_pin_direction_intialize^0,c
   660   00FEE4  EF76  F07F         	goto	u591
   661   00FEE8  EF78  F07F         	goto	u590
   662   00FEEC                     u591:
   663   00FEEC  EFDD  F07F         	goto	l1307
   664   00FEF0                     u590:
   665   00FEF0                     l1299:
   666                           
   667                           ;MCAL_Layer/GPIO/hal_gpio.c: 18:  }
   668   00FEF0  EFFF  F07F         	goto	l131
   669   00FEF4                     l1301:
   670                           
   671                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:            (*tris_registers[pin_config->port] &= ~(1<<p
      +                          in_config->pin));
   672   00FEF4  C023  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
   673   00FEF8  C024  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
   674   00FEFC  30DF               	rrcf	223,w,c
   675   00FEFE  32E8               	rrcf	wreg,f,c
   676   00FF00  32E8               	rrcf	wreg,f,c
   677   00FF02  0B07               	andlw	7
   678   00FF04  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
   679   00FF06  0E01               	movlw	1
   680   00FF08  6E26               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   681   00FF0A  2A25               	incf	??_gpio_pin_direction_intialize^0,f,c
   682   00FF0C  EF8A  F07F         	goto	u604
   683   00FF10                     u605:
   684   00FF10  90D8               	bcf	status,0,c
   685   00FF12  3626               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   686   00FF14                     u604:
   687   00FF14  2E25               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   688   00FF16  EF88  F07F         	goto	u605
   689   00FF1A  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   690   00FF1C  0AFF               	xorlw	255
   691   00FF1E  6E27               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
   692   00FF20  C023  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
   693   00FF24  C024  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
   694   00FF28  50DF               	movf	223,w,c
   695   00FF2A  0B07               	andlw	7
   696   00FF2C  6E28               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
   697   00FF2E  5028               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
   698   00FF30  0D02               	mullw	2
   699   00FF32  0E15               	movlw	low _tris_registers
   700   00FF34  24F3               	addwf	243,w,c
   701   00FF36  6ED9               	movwf	fsr2l,c
   702   00FF38  0E00               	movlw	high _tris_registers
   703   00FF3A  20F4               	addwfc	prodh,w,c
   704   00FF3C  6EDA               	movwf	fsr2h,c
   705   00FF3E  CFDE F029          	movff	postinc2,??_gpio_pin_direction_intialize+4
   706   00FF42  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_intialize+5
   707   00FF46  C029  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
   708   00FF4A  C02A  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
   709   00FF4E  5027               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
   710   00FF50  16DF               	andwf	indf2,f,c
   711                           
   712                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:            break;
   713   00FF52  EFFE  F07F         	goto	l1309
   714   00FF56                     l1303:
   715                           
   716                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:            (*tris_registers[pin_config->port] |= (1<<pi
      +                          n_config->pin));
   717   00FF56  C023  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
   718   00FF5A  C024  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
   719   00FF5E  30DF               	rrcf	223,w,c
   720   00FF60  32E8               	rrcf	wreg,f,c
   721   00FF62  32E8               	rrcf	wreg,f,c
   722   00FF64  0B07               	andlw	7
   723   00FF66  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
   724   00FF68  0E01               	movlw	1
   725   00FF6A  6E26               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   726   00FF6C  2A25               	incf	??_gpio_pin_direction_intialize^0,f,c
   727   00FF6E  EFBB  F07F         	goto	u614
   728   00FF72                     u615:
   729   00FF72  90D8               	bcf	status,0,c
   730   00FF74  3626               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   731   00FF76                     u614:
   732   00FF76  2E25               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   733   00FF78  EFB9  F07F         	goto	u615
   734   00FF7C  C023  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
   735   00FF80  C024  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
   736   00FF84  50DF               	movf	223,w,c
   737   00FF86  0B07               	andlw	7
   738   00FF88  6E27               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
   739   00FF8A  5027               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
   740   00FF8C  0D02               	mullw	2
   741   00FF8E  0E15               	movlw	low _tris_registers
   742   00FF90  24F3               	addwf	243,w,c
   743   00FF92  6ED9               	movwf	fsr2l,c
   744   00FF94  0E00               	movlw	high _tris_registers
   745   00FF96  20F4               	addwfc	prodh,w,c
   746   00FF98  6EDA               	movwf	fsr2h,c
   747   00FF9A  CFDE F028          	movff	postinc2,??_gpio_pin_direction_intialize+3
   748   00FF9E  CFDD F029          	movff	postdec2,??_gpio_pin_direction_intialize+4
   749   00FFA2  C028  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
   750   00FFA6  C029  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
   751   00FFAA  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   752   00FFAC  12DF               	iorwf	indf2,f,c
   753                           
   754                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:            break;
   755   00FFAE  EFFE  F07F         	goto	l1309
   756   00FFB2                     l1305:
   757                           
   758                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:            ret = (Std_ReturnType)0x00;
   759   00FFB2  0E00               	movlw	0
   760   00FFB4  6E2B               	movwf	gpio_pin_direction_intialize@ret^0,c
   761                           
   762                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:    }
   763   00FFB6  EFFE  F07F         	goto	l1309
   764   00FFBA                     l1307:
   765   00FFBA  C023  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
   766   00FFBE  C024  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
   767   00FFC2  BCDF               	btfsc	indf2,6,c
   768   00FFC4  EFE6  F07F         	goto	u621
   769   00FFC8  EFE9  F07F         	goto	u620
   770   00FFCC                     u621:
   771   00FFCC  0E01               	movlw	1
   772   00FFCE  EFEA  F07F         	goto	u630
   773   00FFD2                     u620:
   774   00FFD2  0E00               	movlw	0
   775   00FFD4                     u630:
   776   00FFD4  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
   777   00FFD6  6A26               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
   778                           
   779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   780                           ; Switch size 1, requested type "simple"
   781                           ; Number of cases is 1, Range of values is 0 to 0
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte            4     3 (average)
   785                           ;	Chosen strategy is simple_byte
   786   00FFD8  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   787   00FFDA  0A00               	xorlw	0	; case 0
   788   00FFDC  B4D8               	btfsc	status,2,c
   789   00FFDE  EFF3  F07F         	goto	l1535
   790   00FFE2  EFD9  F07F         	goto	l1305
   791   00FFE6                     l1535:
   792                           
   793                           ; Switch size 1, requested type "simple"
   794                           ; Number of cases is 2, Range of values is 0 to 1
   795                           ; switch strategies available:
   796                           ; Name         Instructions Cycles
   797                           ; simple_byte            7     4 (average)
   798                           ;	Chosen strategy is simple_byte
   799   00FFE6  5025               	movf	??_gpio_pin_direction_intialize^0,w,c
   800   00FFE8  0A00               	xorlw	0	; case 0
   801   00FFEA  B4D8               	btfsc	status,2,c
   802   00FFEC  EF7A  F07F         	goto	l1301
   803   00FFF0  0A01               	xorlw	1	; case 1
   804   00FFF2  B4D8               	btfsc	status,2,c
   805   00FFF4  EFAB  F07F         	goto	l1303
   806   00FFF8  EFD9  F07F         	goto	l1305
   807   00FFFC                     l1309:
   808                           
   809                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:       return ret;
   810   00FFFC  502B               	movf	gpio_pin_direction_intialize@ret^0,w,c
   811   00FFFE                     l131:
   812   00FFFE  0012               	return		;funcret
   813   010000                     __end_of_gpio_pin_direction_intialize:
   814                           	callstack 0
   815                           
   816 ;; *************** function _DC_Motor_Stop *****************
   817 ;; Defined at:
   818 ;;		line 55 in file "ECU_Layer/Motor/ecu_dc_motor.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  dc_motor        2    9[COMRAM] PTR const struct .
   821 ;;		 -> motor_2(2), motor_1(2), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  ret             1   11[COMRAM] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      unsigned char 
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        3 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 1
   840 ;; This function calls:
   841 ;;		_gpio_pin_write_logic
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text5
   848   00FC5A                     __ptext5:
   849                           	callstack 0
   850   00FC5A                     _DC_Motor_Stop:
   851                           	callstack 29
   852   00FC5A                     
   853                           ;ECU_Layer/Motor/ecu_dc_motor.c: 56: Std_ReturnType ret = (Std_ReturnType)0x01;
   854   00FC5A  0E01               	movlw	1
   855   00FC5C  6E2E               	movwf	DC_Motor_Stop@ret^0,c
   856   00FC5E                     
   857                           ;ECU_Layer/Motor/ecu_dc_motor.c: 58: if(dc_motor == ((void*)0)){
   858   00FC5E  502C               	movf	DC_Motor_Stop@dc_motor^0,w,c
   859   00FC60  102D               	iorwf	(DC_Motor_Stop@dc_motor+1)^0,w,c
   860   00FC62  A4D8               	btfss	status,2,c
   861   00FC64  EF36  F07E         	goto	u741
   862   00FC68  EF38  F07E         	goto	u740
   863   00FC6C                     u741:
   864   00FC6C  EF3C  F07E         	goto	l1399
   865   00FC70                     u740:
   866   00FC70                     
   867                           ;ECU_Layer/Motor/ecu_dc_motor.c: 59:     ret = (Std_ReturnType)0x00;
   868   00FC70  0E00               	movlw	0
   869   00FC72  6E2E               	movwf	DC_Motor_Stop@ret^0,c
   870                           
   871                           ;ECU_Layer/Motor/ecu_dc_motor.c: 61: }
   872   00FC74  EF4E  F07E         	goto	l1401
   873   00FC78                     l1399:
   874                           
   875                           ;ECU_Layer/Motor/ecu_dc_motor.c: 65:     gpio_pin_write_logic(&(dc_motor->dc_motors[0x00
      +                          U]), LOW);
   876   00FC78  C02C  F023         	movff	DC_Motor_Stop@dc_motor,gpio_pin_write_logic@pin_config
   877   00FC7C  C02D  F024         	movff	DC_Motor_Stop@dc_motor+1,gpio_pin_write_logic@pin_config+1
   878   00FC80  0E00               	movlw	0
   879   00FC82  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   880   00FC84  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
   881                           
   882                           ;ECU_Layer/Motor/ecu_dc_motor.c: 66:     gpio_pin_write_logic(&(dc_motor->dc_motors[0x01
      +                          U]), LOW);
   883   00FC88  0E01               	movlw	1
   884   00FC8A  242C               	addwf	DC_Motor_Stop@dc_motor^0,w,c
   885   00FC8C  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   886   00FC8E  0E00               	movlw	0
   887   00FC90  202D               	addwfc	(DC_Motor_Stop@dc_motor+1)^0,w,c
   888   00FC92  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   889   00FC94  0E00               	movlw	0
   890   00FC96  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   891   00FC98  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
   892   00FC9C                     l1401:
   893                           
   894                           ;ECU_Layer/Motor/ecu_dc_motor.c: 70: return ret;
   895   00FC9C  502E               	movf	DC_Motor_Stop@ret^0,w,c
   896   00FC9E  0012               	return		;funcret
   897   00FCA0                     __end_of_DC_Motor_Stop:
   898                           	callstack 0
   899                           
   900 ;; *************** function _DC_Motor_Move_Right *****************
   901 ;; Defined at:
   902 ;;		line 24 in file "ECU_Layer/Motor/ecu_dc_motor.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  dc_motor        2    9[COMRAM] PTR const struct .
   905 ;;		 -> motor_2(2), motor_1(2), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  ret             1   11[COMRAM] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      unsigned char 
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;Total ram usage:        3 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 1
   924 ;; This function calls:
   925 ;;		_gpio_pin_write_logic
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text6
   932   00FC14                     __ptext6:
   933                           	callstack 0
   934   00FC14                     _DC_Motor_Move_Right:
   935                           	callstack 29
   936   00FC14                     
   937                           ;ECU_Layer/Motor/ecu_dc_motor.c: 25: Std_ReturnType ret = (Std_ReturnType)0x01;
   938   00FC14  0E01               	movlw	1
   939   00FC16  6E2E               	movwf	DC_Motor_Move_Right@ret^0,c
   940   00FC18                     
   941                           ;ECU_Layer/Motor/ecu_dc_motor.c: 26: if(dc_motor == ((void*)0)){
   942   00FC18  502C               	movf	DC_Motor_Move_Right@dc_motor^0,w,c
   943   00FC1A  102D               	iorwf	(DC_Motor_Move_Right@dc_motor+1)^0,w,c
   944   00FC1C  A4D8               	btfss	status,2,c
   945   00FC1E  EF13  F07E         	goto	u721
   946   00FC22  EF15  F07E         	goto	u720
   947   00FC26                     u721:
   948   00FC26  EF19  F07E         	goto	l1375
   949   00FC2A                     u720:
   950   00FC2A                     
   951                           ;ECU_Layer/Motor/ecu_dc_motor.c: 27:     ret = (Std_ReturnType)0x00;
   952   00FC2A  0E00               	movlw	0
   953   00FC2C  6E2E               	movwf	DC_Motor_Move_Right@ret^0,c
   954                           
   955                           ;ECU_Layer/Motor/ecu_dc_motor.c: 29: }
   956   00FC2E  EF2B  F07E         	goto	l1377
   957   00FC32                     l1375:
   958                           
   959                           ;ECU_Layer/Motor/ecu_dc_motor.c: 33:     gpio_pin_write_logic(&(dc_motor->dc_motors[0x00
      +                          U]), HIGH);
   960   00FC32  C02C  F023         	movff	DC_Motor_Move_Right@dc_motor,gpio_pin_write_logic@pin_config
   961   00FC36  C02D  F024         	movff	DC_Motor_Move_Right@dc_motor+1,gpio_pin_write_logic@pin_config+1
   962   00FC3A  0E01               	movlw	1
   963   00FC3C  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   964   00FC3E  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
   965                           
   966                           ;ECU_Layer/Motor/ecu_dc_motor.c: 34:     gpio_pin_write_logic(&(dc_motor->dc_motors[0x01
      +                          U]), LOW);
   967   00FC42  0E01               	movlw	1
   968   00FC44  242C               	addwf	DC_Motor_Move_Right@dc_motor^0,w,c
   969   00FC46  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   970   00FC48  0E00               	movlw	0
   971   00FC4A  202D               	addwfc	(DC_Motor_Move_Right@dc_motor+1)^0,w,c
   972   00FC4C  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   973   00FC4E  0E00               	movlw	0
   974   00FC50  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   975   00FC52  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
   976   00FC56                     l1377:
   977                           
   978                           ;ECU_Layer/Motor/ecu_dc_motor.c: 36: return ret;
   979   00FC56  502E               	movf	DC_Motor_Move_Right@ret^0,w,c
   980   00FC58  0012               	return		;funcret
   981   00FC5A                     __end_of_DC_Motor_Move_Right:
   982                           	callstack 0
   983                           
   984 ;; *************** function _DC_Motor_Move_Left *****************
   985 ;; Defined at:
   986 ;;		line 40 in file "ECU_Layer/Motor/ecu_dc_motor.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  dc_motor        2    9[COMRAM] PTR const struct .
   989 ;;		 -> motor_2(2), motor_1(2), 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  ret             1   11[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      unsigned char 
   994 ;; Registers used:
   995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;Total ram usage:        3 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 1
  1008 ;; This function calls:
  1009 ;;		_gpio_pin_write_logic
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text7
  1016   00FBCE                     __ptext7:
  1017                           	callstack 0
  1018   00FBCE                     _DC_Motor_Move_Left:
  1019                           	callstack 29
  1020   00FBCE                     
  1021                           ;ECU_Layer/Motor/ecu_dc_motor.c: 41: Std_ReturnType ret = (Std_ReturnType)0x01;
  1022   00FBCE  0E01               	movlw	1
  1023   00FBD0  6E2E               	movwf	DC_Motor_Move_Left@ret^0,c
  1024   00FBD2                     
  1025                           ;ECU_Layer/Motor/ecu_dc_motor.c: 42: if(dc_motor == ((void*)0)){
  1026   00FBD2  502C               	movf	DC_Motor_Move_Left@dc_motor^0,w,c
  1027   00FBD4  102D               	iorwf	(DC_Motor_Move_Left@dc_motor+1)^0,w,c
  1028   00FBD6  A4D8               	btfss	status,2,c
  1029   00FBD8  EFF0  F07D         	goto	u731
  1030   00FBDC  EFF2  F07D         	goto	u730
  1031   00FBE0                     u731:
  1032   00FBE0  EFF6  F07D         	goto	l1387
  1033   00FBE4                     u730:
  1034   00FBE4                     
  1035                           ;ECU_Layer/Motor/ecu_dc_motor.c: 43:     ret = (Std_ReturnType)0x00;
  1036   00FBE4  0E00               	movlw	0
  1037   00FBE6  6E2E               	movwf	DC_Motor_Move_Left@ret^0,c
  1038                           
  1039                           ;ECU_Layer/Motor/ecu_dc_motor.c: 45: }
  1040   00FBE8  EF08  F07E         	goto	l1389
  1041   00FBEC                     l1387:
  1042                           
  1043                           ;ECU_Layer/Motor/ecu_dc_motor.c: 48:    gpio_pin_write_logic(&(dc_motor->dc_motors[0x00U
      +                          ]), LOW);
  1044   00FBEC  C02C  F023         	movff	DC_Motor_Move_Left@dc_motor,gpio_pin_write_logic@pin_config
  1045   00FBF0  C02D  F024         	movff	DC_Motor_Move_Left@dc_motor+1,gpio_pin_write_logic@pin_config+1
  1046   00FBF4  0E00               	movlw	0
  1047   00FBF6  6E25               	movwf	gpio_pin_write_logic@logic^0,c
  1048   00FBF8  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
  1049                           
  1050                           ;ECU_Layer/Motor/ecu_dc_motor.c: 49:     gpio_pin_write_logic(&(dc_motor->dc_motors[0x01
      +                          U]), HIGH);
  1051   00FBFC  0E01               	movlw	1
  1052   00FBFE  242C               	addwf	DC_Motor_Move_Left@dc_motor^0,w,c
  1053   00FC00  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
  1054   00FC02  0E00               	movlw	0
  1055   00FC04  202D               	addwfc	(DC_Motor_Move_Left@dc_motor+1)^0,w,c
  1056   00FC06  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1057   00FC08  0E01               	movlw	1
  1058   00FC0A  6E25               	movwf	gpio_pin_write_logic@logic^0,c
  1059   00FC0C  ECC3  F07E         	call	_gpio_pin_write_logic	;wreg free
  1060   00FC10                     l1389:
  1061                           
  1062                           ;ECU_Layer/Motor/ecu_dc_motor.c: 52: return ret;
  1063   00FC10  502E               	movf	DC_Motor_Move_Left@ret^0,w,c
  1064   00FC12  0012               	return		;funcret
  1065   00FC14                     __end_of_DC_Motor_Move_Left:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _gpio_pin_write_logic *****************
  1069 ;; Defined at:
  1070 ;;		line 55 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1073 ;;		 -> motor_2.dc_motors(2), motor_2(2), motor_1.dc_motors(2), motor_1(2), 
  1074 ;;		 -> Relay_Turn_OFF@pin_obj(1), Relay_Turn_ON@pin_obj(1), Relay_Initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1075 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1076 ;;  logic           1    2[COMRAM] enum E2801
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  ret             1    0        unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      unsigned char 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;Total ram usage:        9 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_gpio_pin_intialize
  1098 ;;		_DC_Motor_Move_Right
  1099 ;;		_DC_Motor_Move_Left
  1100 ;;		_DC_Motor_Stop
  1101 ;;		_led_turn_on
  1102 ;;		_led_turn_off
  1103 ;;		_Relay_Turn_ON
  1104 ;;		_Relay_Turn_OFF
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text8
  1109   00FD86                     __ptext8:
  1110                           	callstack 0
  1111   00FD86                     _gpio_pin_write_logic:
  1112                           	callstack 27
  1113   00FD86                     
  1114                           ;MCAL_Layer/GPIO/hal_gpio.c: 57:       if(pin_config == ((void*)0) || logic == ((void*)0
      +                          ) || pin_config->pin > 8 -1){
  1115   00FD86  5023               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1116   00FD88  1024               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  1117   00FD8A  B4D8               	btfsc	status,2,c
  1118   00FD8C  EFCA  F07E         	goto	u641
  1119   00FD90  EFCC  F07E         	goto	u640
  1120   00FD94                     u641:
  1121   00FD94  EFE5  F07E         	goto	l1325
  1122   00FD98                     u640:
  1123   00FD98  5025               	movf	gpio_pin_write_logic@logic^0,w,c
  1124   00FD9A  B4D8               	btfsc	status,2,c
  1125   00FD9C  EFD2  F07E         	goto	u651
  1126   00FDA0  EFD4  F07E         	goto	u650
  1127   00FDA4                     u651:
  1128   00FDA4  EFE5  F07E         	goto	l1325
  1129   00FDA8                     u650:
  1130   00FDA8  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1131   00FDAC  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1132   00FDB0  30DF               	rrcf	223,w,c
  1133   00FDB2  32E8               	rrcf	wreg,f,c
  1134   00FDB4  32E8               	rrcf	wreg,f,c
  1135   00FDB6  0B07               	andlw	7
  1136   00FDB8  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1137   00FDBA  0E07               	movlw	7
  1138   00FDBC  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
  1139   00FDBE  EFE3  F07E         	goto	u661
  1140   00FDC2  EFE5  F07E         	goto	u660
  1141   00FDC6                     u661:
  1142   00FDC6  EF46  F07F         	goto	l1333
  1143   00FDCA                     u660:
  1144   00FDCA                     l1325:
  1145                           
  1146                           ;MCAL_Layer/GPIO/hal_gpio.c: 59:  }
  1147   00FDCA  EF5B  F07F         	goto	l150
  1148   00FDCE                     l1327:
  1149                           
  1150                           ;MCAL_Layer/GPIO/hal_gpio.c: 64:            (*lat_registers[pin_config->port] &= ~(1<<pi
      +                          n_config->pin));
  1151   00FDCE  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1152   00FDD2  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1153   00FDD6  30DF               	rrcf	223,w,c
  1154   00FDD8  32E8               	rrcf	wreg,f,c
  1155   00FDDA  32E8               	rrcf	wreg,f,c
  1156   00FDDC  0B07               	andlw	7
  1157   00FDDE  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1158   00FDE0  0E01               	movlw	1
  1159   00FDE2  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1160   00FDE4  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1161   00FDE6  EFF7  F07E         	goto	u674
  1162   00FDEA                     u675:
  1163   00FDEA  90D8               	bcf	status,0,c
  1164   00FDEC  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1165   00FDEE                     u674:
  1166   00FDEE  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1167   00FDF0  EFF5  F07E         	goto	u675
  1168   00FDF4  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1169   00FDF6  0AFF               	xorlw	255
  1170   00FDF8  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1171   00FDFA  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1172   00FDFE  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1173   00FE02  50DF               	movf	223,w,c
  1174   00FE04  0B07               	andlw	7
  1175   00FE06  6E29               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1176   00FE08  5029               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1177   00FE0A  0D02               	mullw	2
  1178   00FE0C  0E0B               	movlw	low _lat_registers
  1179   00FE0E  24F3               	addwf	243,w,c
  1180   00FE10  6ED9               	movwf	fsr2l,c
  1181   00FE12  0E00               	movlw	high _lat_registers
  1182   00FE14  20F4               	addwfc	prodh,w,c
  1183   00FE16  6EDA               	movwf	fsr2h,c
  1184   00FE18  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+4
  1185   00FE1C  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+5
  1186   00FE20  C02A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1187   00FE24  C02B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1188   00FE28  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1189   00FE2A  16DF               	andwf	indf2,f,c
  1190                           
  1191                           ;MCAL_Layer/GPIO/hal_gpio.c: 65:            break;
  1192   00FE2C  EF5B  F07F         	goto	l150
  1193   00FE30                     l1329:
  1194                           
  1195                           ;MCAL_Layer/GPIO/hal_gpio.c: 67:            (*lat_registers[pin_config->port] |= (1<<pin
      +                          _config->pin));
  1196   00FE30  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1197   00FE34  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1198   00FE38  30DF               	rrcf	223,w,c
  1199   00FE3A  32E8               	rrcf	wreg,f,c
  1200   00FE3C  32E8               	rrcf	wreg,f,c
  1201   00FE3E  0B07               	andlw	7
  1202   00FE40  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1203   00FE42  0E01               	movlw	1
  1204   00FE44  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1205   00FE46  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1206   00FE48  EF28  F07F         	goto	u684
  1207   00FE4C                     u685:
  1208   00FE4C  90D8               	bcf	status,0,c
  1209   00FE4E  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1210   00FE50                     u684:
  1211   00FE50  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1212   00FE52  EF26  F07F         	goto	u685
  1213   00FE56  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1214   00FE5A  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1215   00FE5E  50DF               	movf	223,w,c
  1216   00FE60  0B07               	andlw	7
  1217   00FE62  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1218   00FE64  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1219   00FE66  0D02               	mullw	2
  1220   00FE68  0E0B               	movlw	low _lat_registers
  1221   00FE6A  24F3               	addwf	243,w,c
  1222   00FE6C  6ED9               	movwf	fsr2l,c
  1223   00FE6E  0E00               	movlw	high _lat_registers
  1224   00FE70  20F4               	addwfc	prodh,w,c
  1225   00FE72  6EDA               	movwf	fsr2h,c
  1226   00FE74  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
  1227   00FE78  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
  1228   00FE7C  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1229   00FE80  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1230   00FE84  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1231   00FE86  12DF               	iorwf	indf2,f,c
  1232                           
  1233                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:            break;
  1234   00FE88  EF5B  F07F         	goto	l150
  1235   00FE8C                     l1333:
  1236   00FE8C  5025               	movf	gpio_pin_write_logic@logic^0,w,c
  1237   00FE8E  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1238   00FE90  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1239                           
  1240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1241                           ; Switch size 1, requested type "simple"
  1242                           ; Number of cases is 1, Range of values is 0 to 0
  1243                           ; switch strategies available:
  1244                           ; Name         Instructions Cycles
  1245                           ; simple_byte            4     3 (average)
  1246                           ;	Chosen strategy is simple_byte
  1247   00FE92  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1248   00FE94  0A00               	xorlw	0	; case 0
  1249   00FE96  B4D8               	btfsc	status,2,c
  1250   00FE98  EF50  F07F         	goto	l1537
  1251   00FE9C  EFE5  F07E         	goto	l1325
  1252   00FEA0                     l1537:
  1253                           
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 2, Range of values is 0 to 1
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte            7     4 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260   00FEA0  5026               	movf	??_gpio_pin_write_logic^0,w,c
  1261   00FEA2  0A00               	xorlw	0	; case 0
  1262   00FEA4  B4D8               	btfsc	status,2,c
  1263   00FEA6  EFE7  F07E         	goto	l1327
  1264   00FEAA  0A01               	xorlw	1	; case 1
  1265   00FEAC  B4D8               	btfsc	status,2,c
  1266   00FEAE  EF18  F07F         	goto	l1329
  1267   00FEB2  EFE5  F07E         	goto	l1325
  1268   00FEB6                     l150:
  1269   00FEB6  0012               	return		;funcret
  1270   00FEB8                     __end_of_gpio_pin_write_logic:
  1271                           	callstack 0
  1272   000000                     
  1273                           	psect	rparam
  1274   000000                     
  1275                           	psect	config
  1276                           
  1277                           ; Padding undefined space
  1278   300000                     	org	3145728
  1279   300000  FF                 	db	255
  1280                           
  1281                           ;Config register CONFIG1H @ 0x300001
  1282                           ;	Oscillator Selection bits
  1283                           ;	OSC = HS, HS oscillator
  1284                           ;	Fail-Safe Clock Monitor Enable bit
  1285                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1286                           ;	Internal/External Oscillator Switchover bit
  1287                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1288   300001                     	org	3145729
  1289   300001  02                 	db	2
  1290                           
  1291                           ;Config register CONFIG2L @ 0x300002
  1292                           ;	Power-up Timer Enable bit
  1293                           ;	PWRT = OFF, PWRT disabled
  1294                           ;	Brown-out Reset Enable bits
  1295                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1296                           ;	Brown Out Reset Voltage bits
  1297                           ;	BORV = 1, 
  1298   300002                     	org	3145730
  1299   300002  09                 	db	9
  1300                           
  1301                           ;Config register CONFIG2H @ 0x300003
  1302                           ;	Watchdog Timer Enable bit
  1303                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1304                           ;	Watchdog Timer Postscale Select bits
  1305                           ;	WDTPS = 32768, 1:32768
  1306   300003                     	org	3145731
  1307   300003  1E                 	db	30
  1308                           
  1309                           ; Padding undefined space
  1310   300004                     	org	3145732
  1311   300004  FF                 	db	255
  1312                           
  1313                           ;Config register CONFIG3H @ 0x300005
  1314                           ;	CCP2 MUX bit
  1315                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1316                           ;	PORTB A/D Enable bit
  1317                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1318                           ;	Low-Power Timer1 Oscillator Enable bit
  1319                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1320                           ;	MCLR Pin Enable bit
  1321                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1322   300005                     	org	3145733
  1323   300005  81                 	db	129
  1324                           
  1325                           ;Config register CONFIG4L @ 0x300006
  1326                           ;	Stack Full/Underflow Reset Enable bit
  1327                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1328                           ;	Single-Supply ICSP Enable bit
  1329                           ;	LVP = OFF, Single-Supply ICSP disabled
  1330                           ;	Extended Instruction Set Enable bit
  1331                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1332                           ;	Background Debugger Enable bit
  1333                           ;	DEBUG = 0x1, unprogrammed default
  1334   300006                     	org	3145734
  1335   300006  81                 	db	129
  1336                           
  1337                           ; Padding undefined space
  1338   300007                     	org	3145735
  1339   300007  FF                 	db	255
  1340                           
  1341                           ;Config register CONFIG5L @ 0x300008
  1342                           ;	Code Protection bit
  1343                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1344                           ;	Code Protection bit
  1345                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1346                           ;	Code Protection bit
  1347                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1348                           ;	Code Protection bit
  1349                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1350   300008                     	org	3145736
  1351   300008  0F                 	db	15
  1352                           
  1353                           ;Config register CONFIG5H @ 0x300009
  1354                           ;	Boot Block Code Protection bit
  1355                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1356                           ;	Data EEPROM Code Protection bit
  1357                           ;	CPD = OFF, Data EEPROM not code-protected
  1358   300009                     	org	3145737
  1359   300009  C0                 	db	192
  1360                           
  1361                           ;Config register CONFIG6L @ 0x30000A
  1362                           ;	Write Protection bit
  1363                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1364                           ;	Write Protection bit
  1365                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1366                           ;	Write Protection bit
  1367                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1368                           ;	Write Protection bit
  1369                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1370   30000A                     	org	3145738
  1371   30000A  0F                 	db	15
  1372                           
  1373                           ;Config register CONFIG6H @ 0x30000B
  1374                           ;	Configuration Register Write Protection bit
  1375                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1376                           ;	Boot Block Write Protection bit
  1377                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1378                           ;	Data EEPROM Write Protection bit
  1379                           ;	WRTD = OFF, Data EEPROM not write-protected
  1380   30000B                     	org	3145739
  1381   30000B  E0                 	db	224
  1382                           
  1383                           ;Config register CONFIG7L @ 0x30000C
  1384                           ;	Table Read Protection bit
  1385                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1386                           ;	Table Read Protection bit
  1387                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1388                           ;	Table Read Protection bit
  1389                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1390                           ;	Table Read Protection bit
  1391                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1392   30000C                     	org	3145740
  1393   30000C  0F                 	db	15
  1394                           
  1395                           ;Config register CONFIG7H @ 0x30000D
  1396                           ;	Boot Block Table Read Protection bit
  1397                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1398   30000D                     	org	3145741
  1399   30000D  40                 	db	64
  1400                           tosu	equ	0xFFF
  1401                           tosh	equ	0xFFE
  1402                           tosl	equ	0xFFD
  1403                           stkptr	equ	0xFFC
  1404                           pclatu	equ	0xFFB
  1405                           pclath	equ	0xFFA
  1406                           pcl	equ	0xFF9
  1407                           tblptru	equ	0xFF8
  1408                           tblptrh	equ	0xFF7
  1409                           tblptrl	equ	0xFF6
  1410                           tablat	equ	0xFF5
  1411                           prodh	equ	0xFF4
  1412                           prodl	equ	0xFF3
  1413                           indf0	equ	0xFEF
  1414                           postinc0	equ	0xFEE
  1415                           postdec0	equ	0xFED
  1416                           preinc0	equ	0xFEC
  1417                           plusw0	equ	0xFEB
  1418                           fsr0h	equ	0xFEA
  1419                           fsr0l	equ	0xFE9
  1420                           wreg	equ	0xFE8
  1421                           indf1	equ	0xFE7
  1422                           postinc1	equ	0xFE6
  1423                           postdec1	equ	0xFE5
  1424                           preinc1	equ	0xFE4
  1425                           plusw1	equ	0xFE3
  1426                           fsr1h	equ	0xFE2
  1427                           fsr1l	equ	0xFE1
  1428                           bsr	equ	0xFE0
  1429                           indf2	equ	0xFDF
  1430                           postinc2	equ	0xFDE
  1431                           postdec2	equ	0xFDD
  1432                           preinc2	equ	0xFDC
  1433                           plusw2	equ	0xFDB
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    DC_Motor_Stop@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    DC_Motor_Move_Left@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    DC_Motor_Move_Right@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    DC_Motor_Intialize@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    gpio_pin_intialize@pin_config	PTR const struct . size(2) Largest target is 2
		 -> motor_2.dc_motors(COMRAM[2]), motor_2(COMRAM[2]), motor_1.dc_motors(COMRAM[2]), motor_1(COMRAM[2]), 
		 -> Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 2
		 -> motor_2.dc_motors(COMRAM[2]), motor_2(COMRAM[2]), motor_1.dc_motors(COMRAM[2]), motor_1(COMRAM[2]), 
		 -> Relay_Turn_OFF@pin_obj(COMRAM[1]), Relay_Turn_ON@pin_obj(COMRAM[1]), Relay_Initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@pin_config	PTR const struct . size(2) Largest target is 2
		 -> motor_2.dc_motors(COMRAM[2]), motor_2(COMRAM[2]), motor_1.dc_motors(COMRAM[2]), motor_1(COMRAM[2]), 
		 -> Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _application_initialize->_DC_Motor_Intialize
    _DC_Motor_Intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_direction_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _DC_Motor_Stop->_gpio_pin_write_logic
    _DC_Motor_Move_Right->_gpio_pin_write_logic
    _DC_Motor_Move_Left->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9159
                                             15 COMRAM     1     1      0
                 _DC_Motor_Move_Left
                _DC_Motor_Move_Right
                      _DC_Motor_Stop
             _application_initialize
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    2855
                 _DC_Motor_Intialize
 ---------------------------------------------------------------------------------
 (2) _DC_Motor_Intialize                                   3     1      2    2852
                                             12 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   4     2      2    2610
                                              9 COMRAM     3     1      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2     331
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _DC_Motor_Stop                                        3     1      2    2099
                                              9 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _DC_Motor_Move_Right                                  3     1      2    2099
                                              9 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _DC_Motor_Move_Left                                   3     1      2    2099
                                              9 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    1857
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DC_Motor_Move_Left
     _gpio_pin_write_logic
   _DC_Motor_Move_Right
     _gpio_pin_write_logic
   _DC_Motor_Stop
     _gpio_pin_write_logic
   _application_initialize
     _DC_Motor_Intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      39       1       44.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      39        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Oct 21 21:31:44 2023

                        ?_DC_Motor_Stop 002C                                     l131 FFFE  
                                   l150 FEB6                                     l223 FB36  
                                   l232 FBCC                                     l242 FC12  
                                   l237 FC58                                     l157 FD00  
                                   l247 FC9E                                     u620 FFD2  
                                   u604 FF14                                     u700 FCD4  
                                   u621 FFCC                                     u605 FF10  
                                   u701 FCD0                                     u630 FFD4  
                                   u614 FF76                                     u710 FBA6  
                                   u615 FF72                                     u711 FBA2  
                                   u640 FD98                                     u720 FC2A  
                                   u641 FD94                                     u721 FC26  
                                   u650 FDA8                                     u730 FBE4  
                                   u651 FDA4                                     u731 FBE0  
                                   u660 FDCA                                     u740 FC70  
                                   u580 FECE                                     u661 FDC6  
                                   u741 FC6C                                     u581 FECA  
                                   u590 FEF0                                     u591 FEEC  
                                   u674 FDEE                                     u690 FCB2  
                                   u675 FDEA                                     u691 FCAE  
                                   u907 FD74                                     u684 FE50  
                                   u685 FE4C                                     u887 FD24  
                                   u897 FD4C                                     prod 0FF3  
                   led_initialize@F2888 0039                                     wreg 0FE8  
                                  l1301 FEF4                                    l1303 FF56  
                                  l1321 FD98                                    l1401 FC9C  
                                  l1305 FFB2                                    l1323 FDA8  
                                  l1307 FFBA                                    l1333 FE8C  
                                  l1325 FDCA                                    l1317 FD86  
                                  l1309 FFFC                                    l1341 FCA0  
                                  l1327 FDCE                                    l1319 FD86  
                                  l1343 FCB2                                    l1351 FB90  
                                  l1511 FD12                                    l1329 FE30  
                                  l1345 FCD4                                    l1353 FB94  
                                  l1521 FD56                                    l1513 FD1E  
                                  l1505 FD02                                    l1371 FC18  
                                  l1347 FCD8                                    l1339 FCA0  
                                  l1355 FBA6                                    l1363 FB1E  
                                  l1523 FD62                                    l1515 FD2E  
                                  l1507 FD02                                    l1381 FBCE  
                                  l1373 FC2A                                    l1293 FEB8  
                                  l1357 FBAE                                    l1365 FB1E  
                                  l1525 FD6E                                    l1517 FD3A  
                                  l1509 FD06                                    l1383 FBD2  
                                  l1375 FC32                                    l1535 FFE6  
                                  l1295 FEBC                                    l1359 FBCA  
                                  l1367 FB2A                                    l1519 FD46  
                                  l1537 FEA0                                    l1385 FBE4  
                                  l1377 FC56                                    l1369 FC14  
                                  l1393 FC5A                                    l1297 FECE  
                                  l1387 FBEC                                    l1395 FC5E  
                                  l1299 FEF0                                    l1389 FC10  
                                  l1397 FC70                                    l1399 FC78  
                                  _LATA 0F89                                    _LATB 0F8A  
                                  _LATC 0F8B                                    _LATD 0F8C  
                                  _LATE 0F8D                                    _main FD02  
                                  fsr2h 0FDA                                    indf2 0FDF  
                                  fsr1l 0FE1                                    fsr2l 0FD9  
                                  prodl 0FF3                                    start 0000  
                          ___param_bank 0000                      _DC_Motor_Intialize FB90  
                  _gpio_pin_write_logic FD86                      _DC_Motor_Move_Left FBCE  
                   ?_DC_Motor_Intialize 002F                                   ?_main 0023  
              ??_application_initialize 0032                                   _PORTA 0F80  
                                 _PORTB 0F81                                   _PORTC 0F82  
                                 _PORTD 0F83                                   _PORTE 0F84  
                                 _TRISA 0F92                                   _TRISB 0F93  
                                 _TRISC 0F94                                   _TRISD 0F95  
                                 _TRISE 0F96                     ?_DC_Motor_Move_Left 002C  
                                 tablat 0FF5                    ??_DC_Motor_Intialize 0031  
                                 status 0FD8                    ??_DC_Motor_Move_Left 002E  
                       ??_DC_Motor_Stop 002E                         __initialization FB5A  
                          __end_of_main FD86                   ?_gpio_pin_write_logic 0023  
                         _lat_registers 000B                                  ??_main 0032  
                         __activetblptr 0002                        led_turn_on@F2893 0038  
                   _DC_Motor_Move_Right FC14                     Relay_Turn_OFF@F2892 0033  
                  ?_DC_Motor_Move_Right 002C                                  clear_0 FB80  
                                isa$std 0001                        DC_Motor_Stop@ret 002E  
                          __pdataCOMRAM 0001                   DC_Motor_Intialize@ret 0031  
                                tblptrh 0FF7                                  tblptrl 0FF6  
                                tblptru 0FF8                              __accesstop 0080  
               __end_of__initialization FB86                           ___rparam_used 0001  
           DC_Motor_Move_Right@dc_motor 002C                   ??_DC_Motor_Move_Right 002E  
                ??_gpio_pin_write_logic 0026                          __pcstackCOMRAM 0023  
                _application_initialize FB1E                   Relay_Initialize@F2882 0035  
                     led_turn_off@F2898 0037                         led_toggle@F2903 0036  
                        _tris_registers 0015                                 __Hparam 0000  
                               __Lparam 0000              __end_of_gpio_pin_intialize FD02  
                               __pcinit FB5A                                 __ramtop 1000  
                               __ptext0 FD02                                 __ptext1 FB1E  
                               __ptext2 FB90                                 __ptext3 FCA0  
                               __ptext4 FEB8                                 __ptext5 FC5A  
                               __ptext6 FC14                                 __ptext7 FBCE  
                               __ptext8 FD86                                 _motor_1 0021  
                               _motor_2 001F                    end_of_initialization FB86  
                 DC_Motor_Move_Left@ret 002E                           __Lmediumconst 0000  
                 __end_of_DC_Motor_Stop FCA0                                 postdec1 0FE5  
                               postdec2 0FDD                                 postinc0 0FEE  
                               postinc2 0FDE    __end_of_gpio_pin_direction_intialize 0000  
          _gpio_pin_direction_intialize FEB8              DC_Motor_Move_Left@dc_motor 002C  
                         __pidataCOMRAM FB38                     start_initialization FB5A  
            DC_Motor_Intialize@dc_motor 002F           ?_gpio_pin_direction_intialize 0023  
               ?_application_initialize 0023             __end_of_DC_Motor_Move_Right FC5A  
                    Relay_Turn_ON@F2887 0034                             __pbssCOMRAM 0033  
        __end_of_application_initialize FB38          gpio_pin_write_logic@pin_config 0023  
       gpio_pin_direction_intialize@ret 002B               gpio_pin_write_logic@logic 0025  
                    _gpio_pin_intialize FCA0          ??_gpio_pin_direction_intialize 0025  
                   ?_gpio_pin_intialize 002C                    ??_gpio_pin_intialize 002E  
                             copy_data0 FB6E              __end_of_DC_Motor_Intialize FBCE  
            __end_of_DC_Motor_Move_Left FC14                                __Hrparam 0000  
                              __Lrparam 0000            gpio_pin_intialize@pin_config 002C  
                              isa$xinst 0000            __end_of_gpio_pin_write_logic FEB8  
                 DC_Motor_Stop@dc_motor 002C  gpio_pin_direction_intialize@pin_config 0023  
                DC_Motor_Move_Right@ret 002E                           _DC_Motor_Stop FC5A  
                        _port_registers 0001  
